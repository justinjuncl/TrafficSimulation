
서론
예 (A,B,C,-1,0)


 사람들은 도심 지역과 고속도로 위에서 많은 시간을 정체 된 상태로 보낸다. 그래서 사람들은 많은 시간을 의미 없이 허비하게 된다. 그렇기 때문에 교통 체증을 해소하려는 것은 현대 사회에서 매우 중요한 문제가 되었다. 따라서 지금까지 이를 해결하기 위한 다양한 연구가 많이 진행되어 왔고, 계속 진행 중이다. 도로 위에서 현재 위치에서 도착지 까지 가는 데의 과정은 같은 도로 위의 자동차들 수, 목적지까지 거쳐야 하는 교차로의 수, 교통 신호 체제, 다른 운전자들의 운전 형태 등, 여러 가지 요소들에 의해 영향을 받는다. 그리고 위에 제시된 것들을 포함하여 많은 조건들이 다양하게 조작이 가능하며, 어떻게 조작을 하는 것에 따라 교통 혼잡의 정도와 운전자들의 주행의 쾌적성 등이 달라질 수 있다. 이번 연구를 통해서 조건들을 어떻게 설정함으로써 막힘이 없는 도로 환경을 최대한 구현해 낼 수 있는 지에 대해 조금 더 다가갈 수 있을 것이다. 물론 벌써 지금까지 많은 연구들이 보다 더 다양하고 전문적이고 체계적으로 이루어졌으며 그것을 토대로 다양한 이론과 법칙들이 제시되어 있다. 따라서 우리는 이 연구를 통해서 조금이라도 교통 체제 연구에 도움이 된다면 더욱 좋지만, 이 연구를 수행하는 것 자체에 의미를 둘 것이다.

















































본론

I . 교통 모델


개요

기본 모델


도로
차선 개수
선 속 셀 개수
의 길이: 3.75m
한 속도
들이 저장되어 있는 행렬 (차선 개수 x 셀 개수)

셀: 차선을 여러 작은 직사각형 공간들로 나누고 그 한 직사각형을 셀이란 단위라 명함
존재 유뮤: 차가 존재 하면 차의 정보가, 존재 하지 않으면 0이 저장 됨
차의 부분 상태: 차의 앞부분이 걸쳐있으면 1, 차의 뒷부분이 걸쳐져 있으면 -1이 저장 됨

차: 차는 셀을 통해서 도로 위를 운전한다.
속해 있는 도로 이름
속해 있는 도로 내 차선
속해 있는 도로 내 차선 내 셀
차의 속도: 단위 시간당 차가 움직이는 셀의 개수
차의 차선 변경 상태: 차선을 바꿀 때 어느 차선으로 바꾸려고 하는 지를 나타내는 값으로, 바꾸지 않으면 0, 왼쪽, 오른쪽 차선으로 변경하느냐에 따라 각각 1, 1이 저장
차의 회전 상태: 다음 교차로에서 어느 방향으로 회전하려는 지를 나타내는 값으로, 직진을 하면 0, 좌회전을 하면 -1, 우회전을 하면 1

그 외 사용할 용어들

델타(i, j): 도로 내에서 (i, j)셀에서 바로 앞의 차까지 남은 셀의 개수 즉 앞에 남은 빈공간을 의미합니다.
감마(i, j): 도로 내에서 (i, j)셀에서 바로 뒤의 차까지 남은 셀의 개수 즉 뒤에 남은 빈공간을 의미합니다.
RA(x) [x] + (x-[x])probability : 여기서 probabilty라고 쓰인 부분은 각 셀을 처리 할 때마다 괄호안의 값의 확률로 1로 그렇지 않은 경우에는 0으로 취급하여 계산합니다.정수가 아닌 값을 정수로 취급하여 계산할 경우에 사용합니다.
lecars: 좌회전차선에서 정체되어 일일이 나열된 차의 대수 혹은 셀의 개수를 저장합니다.
ricars: 우회전차선에서 정체되어 일일이 나열된 차의 대수 혹은 셀의 개수를 저장합니다.
lel: 좌회전차선과의 실질적 거리. 셀(i,j)의 경우 좌회전차선의 거리-lecars-j와 좌회전차선-i를 (몇 차선을 이동해야 좌회전차선에 이를 수 있는지) 두가지를 저장
ril: 우회선차선과의 실질적 거리 셀(i,j)의 경우 우회전차선의 거리-lecars-j와 우회전차선-i를 (몇 차선을 이동해야 우회전차선에 이를 수 있는지) 두가지를 저장














싸이클
단위시간(1초)이 한번 지날 동안 각 차들은 다음과 같은 싸이클을 따르며 움직인다.

1. 차선 변경 실행: 차선변경을 하기 위해 두 차선에 걸쳐져 있던 차들이 자신의 차선을 완전히 변경합니다.

2. 차선 변경 결정: 차선 변경을 하는 것이 합리적이고 안전한지 판단하고 차선변경을 시작하여 두 차선에 차를 걸치기 시작합니다.

3. 속도 변경: 자신의 속도를 주변상황에 맞추어 변경합니다.

4. 위치 변경: 바뀐 속도에 따라서 차의 위치를 실제로 변경합니다.

5. 도로 전체 상태 변경: 도로내의 정보를 차들의 움직임과 시간의 경과에 따라 변경시킵니다.

1 -> 2 -> 3 -> 4 -> 5 -> 1 -> …


도로망은 그래프의 형태로 저장됩니다.

그리고 각 교차점에는 이동 가능한 경로와 회전의 유무 및 종류(좌회전을 해야 하는 경우 -1 우회전을 해야 하는 경우 1을 저장 )와 이동가능상태(가능하면 1 아니면 0)를  모두 저장합니다
(E,H,F,0,1)


1.차선 변경 실행
(i,j) j는 끝에서 앞으로 i는 0에서 끝으로 실행

if 차의 차선변경 상태= 1
    (i,j) 정보 삭제 (i+1,j)의  차선변경 상태= 0

if 차의 차선변경 상태= -1
    (i+1,j)정보 삭제 (i,j)의  차선변경 상태= 0


2. 차선 변경 결정

순서는 i는 끝에서 앞으로
j는 i마다 순서를 랜덤으로 결정해서 실행

cell (i,j)
if 중간도로 위에
   if 차의 부분상태=1
      ifΔ(i,j)<v_max
          if ((i+1,j)의 차의 종류=0[1]
             if Δ(i+1,j)> Δ(i,j)[2]
                 if (i+1,j-(i+1,j))의 v≤ (i,j)의 v[3]
                         if γ(i+1,j)>[3][4]
                          s[2](두번쨰칸)=1

          if ((i-1,j)의 차의 종류=0
             if Δ(i-1,j)> Δ(i,j)
                 if (i-1,j-(i-1,j))의 v≤ (i,j)의 v
                         if γ(i-1,j)>[4]
                          s[1]=1
      ifs=(1,1)
        if 차의 회전 상태-1 s=(1,0)
        if 차의 회전 상태 1 s=(0,1)
        if 차의 회전 상태 0 랜덤으로 s=(1,0) or s=(0,1)
      if s≠(0,0)
          if Uniform random>p_lanechange s=(0,0)
      if s=(1,0)
         차의 차선변경결정 상태에 -1저장
         (i-1,j)에 차의 상태 저장
      if s=(0,1)
         차의 차선변경결정 상태에 1저장
         (i+1,j)에 차의 상태 저장
   if 차의 부분상태=-1
       (i+1,j)의 차의 차선변경결정상태 저장

[1]: 가능성 판단
[2]: 합리성 판단
[3]: 안전성 판단
[4]: 식이 정수가 안나올 수 있으므로 RA를 취합니다.



3. 속도 변경

(i,j)
if 차의 부분상태=1
    v=min { v+n, , sl}
If Uniform random<p_break and v>0 then v=v-1
if 차의 부분상태=-1
v=(i,j+1)의 차의 속도

    v=min { v+n, , sl}
v+n은 보통 차가 별다른 제한 조건이 없으면 가속하는 상태를 반영하기 위함이며, 확률이 설정되어 n은 1,2,3중 하나가  선택되며, 보통은 2가 확률이 가장 높게 설정됩니다.

    는 그 도로에서의 제한 속도를 뜻합니다.
sl은 차가 부딪히지 않도록 유지하는 안전거리를 뜻합니다.
    여기서 안전 거리는 로 계산됩니다.
    정수로 나오지 않기 때문에 를 취하여 입력합니다.
If Uniform random<p_break and v>0 then v=v-1
속도가 영이 아닌 경우 랜덤으로 1만큼 감속시킵니다.
그러므로 p_break는 차들이 감속할 확률입니다.




4. 위치 변경

(i,j)셀의 차의 속도가 n이면, (i,j+n)셀에 (i,j)셀의 차의 정보를 저장, (i,j)셀의 정보는 삭제


5. 도로망 상태 변경

좌회전 차선에서의 정체된 셀길이 계산
우회전 차선에서의 정체된 셀길이 계산
교차로에서의 신호 변경


http://beta.etherpad.org/s4w46YMW4G








